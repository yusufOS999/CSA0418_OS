#include <stdio.h>
#include <stdlib.h>
int mutex = 1;
int full = 0;
int empty = 5;
int buffer[5];
int counter = 0;
int wait(int s) {
    return (--s);
}
int signal(int s) {
    return (++s);
}
void producer() {
    if (mutex == 1 && empty != 0) {
        mutex = wait(mutex);
        empty = wait(empty);
        full = signal(full);
        buffer[counter] = counter + 1;
        printf("Producer produced: %d\n", buffer[counter]);
        counter++;
        mutex = signal(mutex);
    } else {
        printf("Buffer is full. Producer is waiting...\n");
    }
}
void consumer() {
    if (mutex == 1 && full != 0) {
        mutex = wait(mutex);
        full = wait(full);
        empty = signal(empty);
        counter--;
        printf("Consumer consumed: %d\n", buffer[counter]);
        mutex = signal(mutex);
    } else {
        printf("Buffer is empty. Consumer is waiting...\n");
    }
}
int main() {
    int choice;
    printf("Producer-Consumer Problem Simulation\n");

    while (1) {
        printf("\n1. Produce\n2. Consume\n3. Exit\nEnter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: producer(); break;
            case 2: consumer(); break;
            case 3: exit(0);
            default: printf("Invalid choice!\n");
        }
    }

    return 0;
}
