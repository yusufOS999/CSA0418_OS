#include <stdio.h>
#define MAX_FRAMES 10
#define MAX_PAGES 100
int findLRU(int time[], int frameCount) {
    int i, minimum = time[0], pos = 0;
    for (i = 1; i < frameCount; ++i) {
        if (time[i] < minimum) {
            minimum = time[i];
            pos = i;
        }
    }
    return pos;
}
int main() {
    int pages[MAX_PAGES], frames[MAX_FRAMES], time[MAX_FRAMES];
    int pageCount, frameCount, i, j, pos, faults = 0, counter = 0;
    int found;
    printf("Enter number of pages: ");
    scanf("%d", &pageCount);

    printf("Enter page reference string: ");
    for (i = 0; i < pageCount; ++i) {
        scanf("%d", &pages[i]);
    }

    printf("Enter number of frames: ");
    scanf("%d", &frameCount);

    for (i = 0; i < frameCount; ++i) {
        frames[i] = -1;
        time[i] = 0;
    }

    printf("\nPage\tFrames\n");

    for (i = 0; i < pageCount; ++i) {
        found = 0;
        for (j = 0; j < frameCount; ++j) {
            if (frames[j] == pages[i]) {
                counter++;
                time[j] = counter;
                found = 1;
                break;
            }
        }
        if (!found) {
            pos = -1;
            // Check for empty frame
            for (j = 0; j < frameCount; ++j) {
                if (frames[j] == -1) {
                    pos = j;
                    break;
                }
            }

            if (pos == -1) {
                pos = findLRU(time, frameCount);
            }

            frames[pos] = pages[i];
            counter++;
            time[pos] = counter;
            faults++;
        }
        printf("%d\t", pages[i]);
        for (j = 0; j < frameCount; ++j) {
            if (frames[j] == -1)
                printf("- ");
            else
                printf("%d ", frames[j]);
        }
        printf("\n");
    }

    printf("\nTotal Page Faults = %d\n", faults);

    return 0;
}
